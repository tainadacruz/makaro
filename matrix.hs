data Value = Fixed Int | Possible [Int] deriving (Show, Eq)
type Cell = (Int,Int,Int,Value) -- (Linha, Coluna, Regi√£o, Valor)
type Row  = [Cell]
type Grid = [Row]

makaro :: Grid
let makaro = [
    [(1,1,1,_), (1,2,1,_), (1,3,1,_), (1,4,2,_), (1,5,2,_), (1,6,2,_), (1,7,3,_), (1,8,3,_), (1,9,3,_)],
    [(2,1,1,_), (2,2,1,_), (2,3,1,_), (2,4,2,_), (2,5,2,_), (2,6,2,_), (2,7,3,_), (2,8,3,_), (2,9,3,_)],
    [(3,1,1,_), (3,2,1,_), (3,3,1,_), (3,4,2,_), (3,5,2,_), (3,6,2,_), (3,7,3,_), (3,8,3,_), (3,9,3,_)],
    [(4,1,4,_), (4,2,4,_), (4,3,4,_), (4,4,5,_), (4,5,5,_), (4,6,5,_), (4,7,6,_), (4,8,6,_), (4,9,6,_)],
    [(5,1,4,_), (5,2,4,_), (5,3,4,_), (5,4,5,_), (5,5,5,_), (5,6,5,_), (5,7,6,_), (5,8,6,_), (5,9,6,_)],
    [(6,1,4,_), (6,2,4,_), (6,3,4,_), (6,4,5,_), (6,5,5,_), (6,6,5,_), (6,7,6,_), (6,8,6,_), (6,9,6,_)],
    [(7,1,7,_), (7,2,7,_), (7,3,7,_), (7,4,8,_), (7,5,8,_), (7,6,8,_), (7,7,9,_), (7,8,9,_), (7,9,9,_)],
    [(8,1,7,_), (8,2,7,_), (8,3,7,_), (8,4,8,_), (8,5,8,_), (8,6,8,_), (8,7,9,_), (8,8,9,_), (8,9,9,_)],
    [(9,1,7,_), (9,2,7,_), (9,3,7,_), (9,4,8,_), (9,5,8,_), (9,6,8,_), (9,7,9,_), (9,8,9,_), (9,9,9,_)]
    ]

getRow (a,_,_,_) = a
getCol (_,b,_,_) = b
getRegion (_,_,c,_) = c
getValue (_,_,_,d) = d